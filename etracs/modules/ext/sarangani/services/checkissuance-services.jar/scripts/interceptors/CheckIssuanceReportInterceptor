import com.rameses.common.*
import com.rameses.annotations.*
import com.rameses.services.extended.*

class CheckIssuanceReportInterceptor {
	@DataContext('checkissuance')
	def em

	@After(pattern="FormReportService.getParameters",
			eval="#{args[0].reportid=='check_issued_listing'}")
	public void getParameters(ei){
		def result = ei.result
		result.parameters = []
		result.parameters << [name:'year',caption:'Year',type:"integer",required:true]

		def ctl = [:]
		ctl.name = 'bankaccount'
		ctl.caption = 'Account No.'
		ctl.type = 'lookup'
		ctl.handler = 'bankaccount:lookup'
		ctl.expression = '#{item.code}'
		result.parameters << ctl

	}

	@After(pattern="FormReportService.getData",
			eval="#{args[0].reportid=='check_issued_listing'}")
	public void getData(ei){
		def result = ei.result
		def params = ei.args[0].parameters

		def where = ' checkdate >= :startdate and checkdate < :enddate '
		def p = [:]
		p.startdate = params.year + '-01-01'
		p.enddate = (params.year + 1) + '-01-01'

		if (params.bankaccount){
			where += ' and checkbook.bankaccount.code = :acctcode '
			p.acctcode = params.bankaccount.code
		}

		result.data = em.where(where, p).orderBy('checkno').list()
		result.status = 0
	}

}